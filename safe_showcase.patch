*** a/server/main.py
--- b/server/main.py
@@
 logging.basicConfig(
     level=getattr(logging, LOG_LEVEL, logging.INFO),
     format="%(asctime)s %(levelname)s %(name)s: %(message)s",
     force=True,  # ensure our config wins
 )
 logger = logging.getLogger(__name__)
+
+# --- Showcase flags / helpers ---
+SAFE_SHOWCASE = os.getenv("SAFE_SHOWCASE") == "1"
+def _mask(p):
+    if not p: return None
+    p = str(p)
+    return "..." + p[-8:] if len(p) > 8 else "***"
@@
-try:
-    sync_all_from_gcs(ARTIFACTS_DIR)
-except Exception:
-    logger.exception("GCS warm sync failed (continuing with local artifacts if present)")
+if not SAFE_SHOWCASE:
+    try:
+        sync_all_from_gcs(ARTIFACTS_DIR)
+    except Exception:
+        logger.exception("GCS warm sync failed (continuing with local artifacts)")
+else:
+    logger.info("SAFE_SHOWCASE=1 — skipping GCS warm sync")
@@
-logger.info("GOOGLE_APPLICATION_CREDENTIALS (proc): %s", os.getenv("GOOGLE_APPLICATION_CREDENTIALS"))
-logger.info("Resolved SA_PATH=%s; CWD=%s", SA_PATH, os.getcwd())
+logger.info("GOOGLE_APPLICATION_CREDENTIALS: %s", _mask(os.getenv("GOOGLE_APPLICATION_CREDENTIALS")))
+logger.info("Resolved SA_PATH=%s; CWD=%s", _mask(SA_PATH), os.getcwd())
+if SAFE_SHOWCASE:
+    logger.info("SAFE_SHOWCASE=1 — Firebase/Firestore will be skipped or mocked where possible")
@@ def _load_user_timeseries(uid: str, lookback_days: int = 365) -> pd.DataFrame:
-    db = firestore.Client()
+    if SAFE_SHOWCASE:
+        return pd.DataFrame(columns=["ds","y"])
+    db = firestore.Client()
@@ def health():
-    return jsonify({
-        "status": "ok",
-        "loaded_models": sorted(BUNDLES.keys()),
-        "bucket": os.getenv("MODEL_BUCKET"),
-        "prefix": os.getenv("MODEL_PREFIX"),
-        "artifacts_dir": str(ARTIFACTS_DIR),
-    })
+    return jsonify({
+        "status": "ok",
+        "loaded_models": sorted(BUNDLES.keys()),
+        "bucket": None if SAFE_SHOWCASE else os.getenv("MODEL_BUCKET"),
+        "prefix": None if SAFE_SHOWCASE else os.getenv("MODEL_PREFIX"),
+        "artifacts_dir": None if SAFE_SHOWCASE else str(ARTIFACTS_DIR),
+    })
